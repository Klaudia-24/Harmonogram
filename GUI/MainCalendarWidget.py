from PyQt5 import QtWidgets, QtGui, QtCore
from GUI.Autogenerated.AGMainCalendarWidget import Ui_Form
from datetime import date
import datetime
import dateutils
from calendar import monthrange
# from GUI.MainWindow import MainWindow


class MainCalendarWidget(QtWidgets.QWidget):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.mainCalendarWidget = Ui_Form()
        self.mainCalendarWidget.setupUi(self)
        self.dateOnDateBar = date.today()
        self.init_ui()

    def init_ui(self) -> None:
        self.setWeekDaysAppearance()
        self.setWeekNumbersAppearance()
        self.setAdditionalCalendarAppearance()
        self.setDaysWidgetAppearance()
        self.generateCalendarDays()

        for i in range(1, 43):
            getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setClicked')(self.getLabelNameFromCalendarDayLabel)

    def setWeekDaysAppearance(self):
        for i in range(1, 8):
            getattr(getattr(self.mainCalendarWidget, 'weekDay' + str(i)), 'setBackgroundColor')("#bfbfbf")
            getattr(getattr(self.mainCalendarWidget, 'weekDay' + str(i)), 'setFontAppearance')('Times')
            # getattr(getattr(self.mainCalendarWidget, 'weekDay' + str(i)), 'setAlignment')(QtCore.Qt.AlignCenter)

    def setWeekNumbersAppearance(self):
        for i in range(1, 7):
            getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'setBackgroundColor')("#bfbfbf")
            getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'setFontAppearance')('Times')
            # getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'setAlignment')(QtCore.Qt.AlignCenter)

    def setDaysWidgetAppearance(self):
        for i in range(1, 43):
            getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setFontAppearance')('Times')
            # getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setFont')(QtGui.QFont('Times', 9))
            # getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setAlignment')(QtCore.Qt.AlignCenter)

    def setAdditionalCalendarAppearance(self):
        self.mainCalendarWidget.weekLabel.setBackgroundColor("#bfbfbf")
        self.mainCalendarWidget.weekLabel.setFontAppearance('Times')
        # self.mainCalendarWidget.weekLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.mainCalendarWidget.calendarGridLayout.setSpacing(1)

    def generateCalendarDays(self):
        firstWeekDayOfMonth = int(
            datetime.datetime(self.dateOnDateBar.year,
                              self.dateOnDateBar.month, 1).strftime('%w'))
        currentMonthRange = int(monthrange(self.dateOnDateBar.year,
                                           self.dateOnDateBar.month)[1])

        if firstWeekDayOfMonth == 0:
            firstWeekDayOfMonth = 7

        for i in range(1, 43):
            if i < firstWeekDayOfMonth:
                newDate = datetime.datetime(self.dateOnDateBar.year, self.dateOnDateBar.month, self.dateOnDateBar.day) \
                          - dateutils.relativedelta(months=1)
                prevMonthRange = int(monthrange(newDate.year, newDate.month)[1])
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setText')(
                    str(prevMonthRange - firstWeekDayOfMonth + i + 1))
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setBackgroundColor')("#cce6ff")

            elif firstWeekDayOfMonth <= i <= currentMonthRange + firstWeekDayOfMonth - 1:
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setText')(str(i - firstWeekDayOfMonth + 1))
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setBackgroundColor')("#80bfff")

            else:
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setText')(
                    str(i - firstWeekDayOfMonth - currentMonthRange + 1))
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setBackgroundColor')("#cce6ff")

        # self.setDateInBar()

        if self.dateOnDateBar.year == date.today().year and self.dateOnDateBar.month == date.today().month:
            self.distinguishDayFromDateBar()
        else:
            for i in range(1, 43):
                # getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setFont')(QtGui.QFont('Times', 9, QtGui.QFont.Normal))
                getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setFontAppearance')('Times')

        self.setWeekNumbers()

    def distinguishDayFromDateBar(self):
        firstWeekDayOfMonth = int(
            datetime.datetime(self.dateOnDateBar.year, self.dateOnDateBar.month, 1).strftime('%w'))

        if firstWeekDayOfMonth == 0:
            firstWeekDayOfMonth = 7

        todayIndex = date.today().day + firstWeekDayOfMonth - 1
        getattr(getattr(self.mainCalendarWidget, 'day_' + str(todayIndex)), 'setBackgroundColor')("#339966")
        # getattr(getattr(self.mainCalendarWidget, 'day_' + str(todayIndex)), 'setFont')(QtGui.QFont('Times', 11, QtGui.QFont.Bold))
        getattr(getattr(self.mainCalendarWidget, 'day_' + str(todayIndex)), 'setFontAppearance')('Times')

    def setWeekNumbers(self):
        firstSundayDate = date(self.dateOnDateBar.year, self.dateOnDateBar.month, int(self.mainCalendarWidget.day_7.getText()))

        for i in range(0, 6):
            number = (firstSundayDate + dateutils.relativedelta(days=7 * i)).strftime('%W').lstrip("0")
            i += 1
            getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'setText')(str(number))

    def distinguishClickedDay(self):
        firstWeekDayOfMonth = int(
            datetime.datetime(self.dateOnDateBar.year, self.dateOnDateBar.month, 1).strftime('%w'))

        if firstWeekDayOfMonth == 0:
            firstWeekDayOfMonth = 7

        clickedIndex = self.dateOnDateBar.day + firstWeekDayOfMonth - 1
        getattr(getattr(self.mainCalendarWidget, 'day_' + str(clickedIndex)), 'setStyleSheet')("background-color: rgb(102, 204, 153)")

    def getLabelNameFromCalendarDayLabel(self, event, labelName):
        button = event.button()
        modify = event.modifiers()
        if modify == QtCore.Qt.NoModifier and button == QtCore.Qt.LeftButton:
            labelObject = getattr(self.mainCalendarWidget, labelName)
            # self.setClickedDateInDateBar(labelObject.text(), labelName)
            self.distinguishClickedDay()
            return

    def updateWidgetSize(self):
        print("width: " + str(self.width()))
        print("height: " + str(self.height()))

        cellWidth = (self.width()//8) - 6
        cellHeight = (self.height()//7) - 6

        self.mainCalendarWidget.widget.setGeometry(0, 0, self.width(), self.height())
        self.setMinimumHeight(self.height())
        self.setMinimumWidth(self.width())

        # for i in range(0, 8):
        #     self.mainCalendarWidget.calendarGridLayout.setColumnMinimumWidth(i, cellWidth)
        #
        # for i in range(0, 7):
        #     self.mainCalendarWidget.calendarGridLayout.setRowMinimumHeight(i, cellHeight)

        # for i in range(1, 7):
        #     getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'setWidgetSize')(cellWidth, cellHeight)
        #     getattr(getattr(self.mainCalendarWidget, 'weekNumber' + str(i)), 'refresh')
        #
        # for i in range(1, 8):
        #     getattr(getattr(self.mainCalendarWidget, 'weekDay' + str(i)), 'setWidgetSize')(cellWidth, cellHeight)
        #     getattr(getattr(self.mainCalendarWidget, 'weekDay' + str(i)), 'refresh')

        # self.mainCalendarWidget.calendarGridLayout.setColumnMinimumWidth(cellWidth)
        # self.mainCalendarWidget.calendarGridLayout.

        # for i in range(1, 43):
        #     getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'setWidgetSize')(cellWidth, cellHeight)
        #     getattr(getattr(self.mainCalendarWidget, 'day_' + str(i)), 'refresh')
        #
        # self.mainCalendarWidget.weekLabel.setWidgetSize(cellWidth, cellHeight)
        # self.mainCalendarWidget.weekLabel.refresh()


# def __main__():
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     Mainwindow = MainCalendarWidget()
#
#     Mainwindow.show()
#     sys.exit(app.exec_())
#
#
# if __name__ == '__main__':
#     __main__()
