from PyQt5 import QtWidgets
from GUI.Autogenerated.SettingsWindow.AGGeneralSet import Ui_Form
from Lib.FileOperationMethods import readFromYamlFile
from Objects.AppSettings import GeneralSettings
from GUI.MainWindow.ColorSettingWindow import *


import logging
logger = logging.getLogger('generalSetLogger')
class GeneralSet(QtWidgets.QWidget):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.generalSet = Ui_Form()
        self.generalSet.setupUi(self)
        self.dialogColorW = Window()
        self.colourPalettesDict = readFromYamlFile('./Lib/colourPalettes.yaml')
        self.generalSet.navBtnStyleComboBox.activated.connect(self.changeButtonsPreview)
        self.generalSet.groupBox.setStyleSheet("QGroupBox#groupBox { border: 1px solid #8c8c8c ;}")

    def init_ui(self) -> None:
        pass

    def getColorFromDialog(self):
        self.color_RGB = self.dialogColorW.ReturnColor().name()

    def setCurrentData(self, settingsDict):
        self.generalSet.windowsBackColourBtn.setStyleSheet(f"background-color:{settingsDict['windowBackColour']}")

        self.generalSet.navBtnStyleComboBox.clear()

        for index in self.colourPalettesDict.keys():
            self.generalSet.navBtnStyleComboBox.addItem(self.colourPalettesDict[index]['name'])

        self.generalSet.eventsFilePathPlainTextEdit.setPlainText(settingsDict['eventsFilePath'])
        self.generalSet.dateBarFontColourBtn.setStyleSheet(f"background-color:{settingsDict['dateBarFontColour']}")
        self.generalSet.dateBarFontSizeSpinBox.setValue(settingsDict['dateBarFontSize'])
        self.generalSet.dateBarFontBoldCheckBox.setChecked(bool(settingsDict['dateBarFontBold']))
        self.generalSet.navBtnStyleComboBox.setCurrentIndex(settingsDict['navBtnStyle'])
        self.setButtonsPreview(settingsDict['navBtnStyle'])

    def getCurrentData(self):
        return GeneralSettings(self.generalSet.windowsBackColourBtn.palette().window().color().name(),
                               self.generalSet.navBtnStyleComboBox.currentText(),
                               self.generalSet.eventsFilePathPlainTextEdit.toPlainText(),
                               self.generalSet.dateBarFontColourBtn.palette().window().color().name(),
                               self.generalSet.dateBarFontSizeSpinBox.value(),
                               self.generalSet.dateBarFontBoldCheckBox.isChecked()
                               )

    def setButtonsPreview(self, paletteIndex):

        self.generalSet.dayColourBtn.setStyleSheet(f"background-color:{self.colourPalettesDict[paletteIndex]['colour1']}; "
                                                   f"color:{self.colourPalettesDict[paletteIndex]['fontColour1']}")
        self.generalSet.weekColourBtn.setStyleSheet(f"background-color:{self.colourPalettesDict[paletteIndex]['colour2']}; "
                                                    f"color:{self.colourPalettesDict[paletteIndex]['fontColour2']}")
        self.generalSet.monthColourBtn.setStyleSheet(f"background-color:{self.colourPalettesDict[paletteIndex]['colour3']};"
                                                     f"color:{self.colourPalettesDict[paletteIndex]['fontColour3']}")
        self.generalSet.newEventColourBtn.setStyleSheet(f"background-color:{self.colourPalettesDict[paletteIndex]['colour4']};"
                                                        f"color:{self.colourPalettesDict[paletteIndex]['fontColour4']}")

    def changeButtonsPreview(self):
        self.setButtonsPreview(self.generalSet.navBtnStyleComboBox.currentIndex())

def __main__():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    generalSet = GeneralSet()
    generalSet.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    __main__()