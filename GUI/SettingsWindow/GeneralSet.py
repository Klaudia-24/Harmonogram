from PyQt5 import QtWidgets
from GUI.Autogenerated.SettingsWindow.AGGeneralSet import Ui_Form
from Lib.FileOperationMethods import readColourPalettesFromYamlFile
from Objects.AppSettings import GeneralSettings
from GUI.MainWindow.ColorSettingWindow import *
from Objects.AppSettings import colourPalettesDict

import logging
logger = logging.getLogger('generalSetLogger')
class GeneralSet(QtWidgets.QWidget):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.generalSet = Ui_Form()
        self.generalSet.setupUi(self)
        self.dialogColorW = Window()
        # colourPalettesDict = readColourPalettesFromYamlFile()
        # logger.debug(colourPalettesDict)
        self.generalSet.navBtnStyleComboBox.activated.connect(self.changeButtonsPreview)

        # logger.debug(self.generalSet.navBtnStyleComboBox.currentIndex())
        # self.setButtonsPreview()

        self.generalSet.groupBox.setStyleSheet("QGroupBox#groupBox { border: 1px solid #8c8c8c ;}")
        self.init_ui()

    def init_ui(self) -> None:
        global colourPalettesDict
        colourPalettesDict = readColourPalettesFromYamlFile()

    def getColorFromDialog(self):
        self.color_RGB = self.dialogColorW.ReturnColor().name()

    def setCurrentData(self, settingsDict):
        self.generalSet.windowsBackColourBtn.setStyleSheet(f"background-color:{settingsDict['windowBackColour']}")

        self.generalSet.navBtnStyleComboBox.clear()

        # logger.debug(colourPalettesDict[0].keys())

        for index in colourPalettesDict[0].keys():
            self.generalSet.navBtnStyleComboBox.addItem(colourPalettesDict[0][index]['name'])

        self.generalSet.eventsFilePathPlainTextEdit.setPlainText(settingsDict['eventsFilePath'])
        self.generalSet.dateBarFontColourBtn.setStyleSheet(f"background-color:{settingsDict['dateBarFontColour']}")
        self.generalSet.dateBarFontSizeSpinBox.setValue(settingsDict['dateBarFontSize'])
        self.generalSet.dateBarFontBoldCheckBox.setChecked(bool(settingsDict['dateBarFontBold']))
        self.generalSet.navBtnStyleComboBox.setCurrentIndex(settingsDict['navBtnStyle'])
        self.setButtonsPreview(settingsDict['navBtnStyle'])

    def getCurrentData(self):
        return GeneralSettings(self.generalSet.windowsBackColourBtn.palette().window().color().name(),
                               self.generalSet.navBtnStyleComboBox.currentText(),
                               self.generalSet.eventsFilePathPlainTextEdit.toPlainText(),
                               self.generalSet.dateBarFontColourBtn.palette().window().color().name(),
                               self.generalSet.dateBarFontSizeSpinBox.value(),
                               self.generalSet.dateBarFontBoldCheckBox.isChecked()
                               )

    def setButtonsPreview(self, paletteIndex):

        self.generalSet.dayColourBtn.setStyleSheet(f"background-color:{colourPalettesDict[0][paletteIndex]['colour1']}; "
                                                   f"color:{colourPalettesDict[0][paletteIndex]['fontColour1']}")
        self.generalSet.weekColourBtn.setStyleSheet(f"background-color:{colourPalettesDict[0][paletteIndex]['colour2']}; "
                                                    f"color:{colourPalettesDict[0][paletteIndex]['fontColour2']}")
        self.generalSet.monthColourBtn.setStyleSheet(f"background-color:{colourPalettesDict[0][paletteIndex]['colour3']};"
                                                     f"color:{colourPalettesDict[0][paletteIndex]['fontColour3']}")
        self.generalSet.newEventColourBtn.setStyleSheet(f"background-color:{colourPalettesDict[0][paletteIndex]['colour4']};"
                                                        f"color:{colourPalettesDict[0][paletteIndex]['fontColour4']}")

    def changeButtonsPreview(self):
        self.setButtonsPreview(self.generalSet.navBtnStyleComboBox.currentIndex())
        # self.generalSet.dayColourBtn.setStyleSheet(
        #     f"background-color:{colourPalettesDict[0][paletteIndex]['colour1']}; "
        #     f"color:{colourPalettesDict[0][paletteIndex]['fontColour1']}")
        # self.generalSet.weekColourBtn.setStyleSheet(
        #     f"background-color:{colourPalettesDict[0][paletteIndex]['colour2']}; "
        #     f"color:{colourPalettesDict[0][paletteIndex]['fontColour2']}")
        # self.generalSet.monthColourBtn.setStyleSheet(
        #     f"background-color:{colourPalettesDict[0][paletteIndex]['colour3']};"
        #     f"color:{colourPalettesDict[0][paletteIndex]['fontColour3']}")
        # self.generalSet.newEventColourBtn.setStyleSheet(
        #     f"background-color:{colourPalettesDict[0][paletteIndex]['colour4']};"
        #     f"color:{colourPalettesDict[0][paletteIndex]['fontColour4']}")

def __main__():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    generalSet = GeneralSet()
    generalSet.show()
    sys.exit(app.exec_())


if __name__ == '__main__':
    __main__()