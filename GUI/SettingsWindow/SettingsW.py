from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QListWidgetItem

from GUI.Autogenerated.SettingsWindow.AGSettingsW import Ui_Form
from GUI.SettingsWindow.GeneralSet import GeneralSet
from GUI.SettingsWindow.DayCalendarSet import DayCalendarSet
from GUI.SettingsWindow.MonthCalendarSet import MonthCalendarSet
from GUI.SettingsWindow.WeekCalendarSet import WeekCalendarSet
from GUI.SettingsWindow.EventTypeSet import EventTypesSet

from Objects.AppSettings import settingsDict

import logging
logger = logging.getLogger('settingsWLogger')

class SettingsW(QtWidgets.QWidget):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.settingsWindow = Ui_Form()
        self.settingsWindow.setupUi(self)

        self.settingsWindow.listWidget.addItem(QListWidgetItem('General'))
        self.settingsWindow.listWidget.addItem(QListWidgetItem('Day view'))
        self.settingsWindow.listWidget.addItem(QListWidgetItem('Week view'))
        self.settingsWindow.listWidget.addItem(QListWidgetItem('Month view'))
        self.settingsWindow.listWidget.addItem(QListWidgetItem('Event types manager'))

        self.settingsWindow.stackedWidget.addWidget(GeneralSet())
        self.settingsWindow.stackedWidget.addWidget(DayCalendarSet())
        self.settingsWindow.stackedWidget.addWidget(WeekCalendarSet())
        self.settingsWindow.stackedWidget.addWidget(MonthCalendarSet())
        self.settingsWindow.stackedWidget.addWidget(EventTypesSet())

        self.init_ui()
    def init_ui(self) -> None:
        self.settingsWindow.stackedWidget.setCurrentIndex(0)
        self.settingsWindow.listWidget.setCurrentRow(0)
        self.setSelectedWidget()
        self.settingsWindow.listWidget.currentItemChanged.connect(self.setSelectedWidget)
        self.settingsWindow.okBtn.clicked.connect(self.settingsOkBtn)
        self.settingsWindow.cancelBtn.clicked.connect(self.settingsCancelBtn)
        self.settingsWindow.applyBtn.clicked.connect(self.settingsApplyBtn)

    def settingsOkBtn(self):
        pass
        # call settingsApplyBtn()
        # close window

    def settingsCancelBtn(self):
        pass

    def settingsApplyBtn(self):
        pass
        # reload style
        # save to the file

    def switchToTheGeneralSet(self):
        self.settingsWindow.stackedWidget.setCurrentIndex(0)
        self.settingsWindow.stackedWidget.currentWidget().setCurrentData(settingsDict['generalSettings'])

    def setSelectedWidget(self):
        currentIndex=self.settingsWindow.listWidget.currentRow()
        self.settingsWindow.stackedWidget.setCurrentIndex(currentIndex)
        if currentIndex<4:
            self.settingsWindow.stackedWidget.currentWidget().setCurrentData(settingsDict[list(settingsDict.keys())[currentIndex]])

    def clearSelectedListItem(self):
        self.settingsWindow.listWidget.clearSelection()

def __main__():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    settingsW = SettingsW()
    settingsW.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    __main__()
