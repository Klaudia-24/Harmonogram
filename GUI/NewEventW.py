from PyQt5 import QtCore, QtWidgets
from GUI.NewEventTypeW import NewTypeEventW
from GUI.Autogenerated.AGNewEventW import Ui_Form
from Objects.Event import addEventToList, saveEventList, getEventTypeList, EventDuration_2, Event_2


class NewEventW(QtWidgets.QWidget):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.newEventW = Ui_Form()
        self.newEventW.setupUi(self)
        self.ui_newEventTypeWindow = NewTypeEventW()
        self.init_ui()

    def init_ui(self) -> None:
        """Contains additional setups and methods calls."""

        self.newEventW.remindBeforeComboBox.addItem("15 minutes")
        self.newEventW.remindBeforeComboBox.addItem("30 minutes")
        self.newEventW.remindBeforeComboBox.addItem("1 hour")
        self.newEventW.remindBeforeComboBox.addItem("5 hours")
        self.newEventW.remindBeforeComboBox.addItem("1 day")
        self.newEventW.addEventTypeButton.clicked.connect(self.openNewEventTypeWindow)
        self.newEventW.cancelButton.clicked.connect(self.closeWindow)
        self.newEventW.addEventButton.clicked.connect(self.confirmAddingNewEvent)
        self.addEventTypesToComboBox()
        self.ui_newEventTypeWindow.submitted.connect(self.updateEventTypeComboBox)

    def openNewEventTypeWindow(self) -> None:
        """Create a window for adding new type of the event."""

        # self.mainWindow = QtWidgets.QMainWindow()
        # self.ui_newEventTypeWindow = Ui_NewEventTypeWindow()
        # self.ui_newEventTypeWindow.setupUi(self.mainWindow)
        self.ui_newEventTypeWindow.show()
        # TODO refresh new event types here or by slots

    def closeWindow(self) -> None:
        """Only close the opened window, used for 'Close' buttons etc."""

        self.close()

    def setDateFromCalendar(self, date) -> None:
        """Sets date in the date edit field. The date is taken from the date bar in the main window."""

        self.newEventW.dateFromCalendar = date
        self.newEventW.dateEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(self.newEventW.dateFromCalendar.year,
                                                                          self.newEventW.dateFromCalendar.month,
                                                                          self.newEventW.dateFromCalendar.day), QtCore.QTime(0, 0, 0)))

    def createNewEvent(self) -> dict:
        """Changes the event object to the JSON dictionary."""

        if self.newEventW.allDayEventRadioButton.isChecked():
            timeFrom = "00:00"
            timeTo = "23:59"
            eventDuration=EventDuration_2(True, timeFrom, timeTo)
        else:
            timeFrom = str(self.newEventW.timeFromEdit.time().hour())+ ":" + str(self.newEventW.timeFromEdit.time().minute())
            timeTo = str(self.newEventW.timeToEdit.time().hour()) + ":" + str(self.newEventW.timeToEdit.time().minute())
            eventDuration = EventDuration_2(False, timeFrom, timeTo)

        event = Event_2(
            eventDuration=eventDuration,
            type=str(self.newEventW.eventTypeComboBox.currentText()),
            title=self.newEventW.eventTitlePlainTextEdit.toPlainText(),
            description=self.newEventW.eventDescriptionPlaneTextEdit.toPlainText(),
            localization=self.newEventW.eventLocalizationPlainTextEdit.toPlainText(),
            reminder=str(self.newEventW.remindBeforeComboBox.currentText())
        )
        return event.to_dict()


    def confirmAddingNewEvent(self) -> None:
        """Used for 'Confirm' button. Adds new event to the events' dictionary,
        saves the event dictionary to the JSON file and closes the new event window."""

        year = str(self.newEventW.dateEdit.date().year())
        month = str(self.newEventW.dateEdit.date().month())
        day = str(self.newEventW.dateEdit.date().day())

        addEventToList(year, month, day, self.createNewEvent())
        saveEventList()

        self.closeWindow()


    def addEventTypesToComboBox(self):
        for element in getEventTypeList():
                self.newEventW.eventTypeComboBox.addItem(element)

    @QtCore.pyqtSlot(str)
    def updateEventTypeComboBox(self, newEventType: str):
        self.newEventW.eventTypeComboBox.addItem(newEventType)

    def clearEventDataInFormular(self):
        self.newEventW.eventTitlePlainTextEdit.setPlainText("")
        self.newEventW.eventDescriptionPlaneTextEdit.setPlainText("")
        self.newEventW.eventLocalizationPlainTextEdit.setPlainText("")

    # def eventDurationDisable(self):
    #
    #     self.newEventW.allDayEventRadioButton = self.sender()
    #     if self.newEventW.setDurationEventRadioButton.isChecked():
    #         pass

